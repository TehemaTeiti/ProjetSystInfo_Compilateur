-- c = 9
AFC 0 9
STORE 4 0
LOAD 0 4
STORE 0 0

-- i = 10
AFC 0 10
STORE 4 0
LOAD 0 4
STORE 3 0

-- j = 20
AFC 0 20
STORE 4 0
LOAD 0 4
STORE 2 0
LOAD 0 3
STORE 4 0

-- k = ((i*3) + (j-5)) / 9
AFC 0 3
STORE 5 0
LOAD 1 5
LOAD 0 4
MUL 0 1
STORE 4 0
LOAD 0 2
STORE 5 0
AFC 0 5
STORE 6 0
LOAD 1 6
LOAD 0 5
SOU 0 1
STORE 5 0
LOAD 1 5
LOAD 0 4
ADD 0 1
STORE 4 0
AFC 0 9
STORE 5 0
LOAD 1 5
LOAD 0 4
DIV 0 1
STORE 4 0
LOAD 0 4
STORE 1 0

-- if (k > 10) {
LOAD 0 1
STORE 4 0
AFC 0 10
STORE 5 0
LOAD 1 5
LOAD 0 4
SUP 0 1
STORE 4 0
LOAD 0 4
JMPC 55 0

-- k = 5
AFC 0 5
STORE 4 0
LOAD 0 4
STORE 1 0
JMP 59 0

-- } else {
-- k = 0
AFC 0 0
STORE 4 0
LOAD 0 4
STORE 1 0

-- while (k < 10) {
LOAD 0 1
STORE 4 0
AFC 0 10
STORE 5 0
LOAD 1 5
LOAD 0 4
INF 0 1
STORE 4 0
LOAD 0 4
JMPC 80 0

-- k = k+1
LOAD 0 1
STORE 4 0
AFC 0 1
STORE 5 0
LOAD 1 5
LOAD 0 4
ADD 0 1
STORE 4 0
LOAD 0 4
STORE 1 0
JMP 67 0
